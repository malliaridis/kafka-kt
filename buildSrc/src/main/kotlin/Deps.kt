object Deps {
    val kotlinVersion = "1.9.0"
    val jvmTarget = "11"
    val availableScalaVersions = listOf("2.12", "2.13")

    // Add Scala version
    const val defaultScala212Version = "2.12.15"
    const val defaultScala213Version = "2.13.10"

    object Version {
        val scalaVersion: String? = null // TODO See how to migrate hasProperty("scalaVersion")
        val scala = scalaVersion?.let {
            if (scalaVersion == "2.12") defaultScala212Version
            else if (scalaVersion == "2.13") defaultScala213Version
            else scalaVersion
        } ?: defaultScala212Version

        /* Resolve base Scala version according to these patterns:
         1. generally available Scala versions (such as: 2.12.y and 2.13.z) corresponding baseversions will be: 2.12 and 2.13 (respectively)
         2. pre-release Scala versions (i.e. milestone/rc, such as: 2.13.0-M5, 2.13.0-RC1, 2.14.0-M1, etc.) will have identical base versions;
            rationale: pre-release Scala versions are not binary compatible with each other and that"s the reason why libraries include the full
            Scala release string in their name for pre-releases (see dependencies below with an artifact name suffix "_$versions.baseScala")
        */
        val baseScala = if (!Version.scala.contains("-")) Version.scala.substring(0, Version.scala.lastIndexOf("."))
        else Version.scala

        const val activation = "1.1.1"
        const val apacheda = "1.0.2"
        const val apacheds = "2.0.0-M24"
        const val argparse4j = "0.7.0"
        const val bcpkix = "1.70"
        const val checkstyle = "8.36.2"
        const val commonsCli = "1.4"
        const val dropwizardMetrics = "4.1.12.1"
        const val gradle = "7.6"
        const val grgit = "4.1.1"
        const val httpclient = "4.5.13"
        const val easymock = "4.3"
        const val jackson = "2.13.4"
        const val jacksonDatabind = "2.13.4.2"
        const val jacoco = "0.8.7"
        const val javassist = "3.27.0-GA"
        const val jetty = "9.4.48.v20220622"
        const val jersey = "2.34"
        const val jline = "3.21.0"
        const val jmh = "1.35"
        const val hamcrest = "2.2"
        const val scalaLogging = "3.9.4"
        const val jaxAnnotation = "1.3.2"
        const val jaxb = "2.3.0"
        const val jaxrs = "2.1.1"
        const val jfreechart = "1.0.0"
        const val jopt = "5.0.4"
        const val jose4j = "0.7.9"
        const val junit = "5.9.0"
        const val jqwik = "1.6.5"
        const val kafka_0100 = "0.10.0.1"
        const val kafka_0101 = "0.10.1.1"
        const val kafka_0102 = "0.10.2.2"
        const val kafka_0110 = "0.11.0.3"
        const val kafka_10 = "1.0.2"
        const val kafka_11 = "1.1.1"
        const val kafka_20 = "2.0.1"
        const val kafka_21 = "2.1.1"
        const val kafka_22 = "2.2.2"
        const val kafka_23 = "2.3.1"
        const val kafka_24 = "2.4.1"
        const val kafka_25 = "2.5.1"
        const val kafka_26 = "2.6.2"
        const val kafka_27 = "2.7.1"
        const val kafka_28 = "2.8.2"
        const val kafka_30 = "3.0.2"
        const val kafka_31 = "3.1.2"
        const val kafka_32 = "3.2.3"
        const val kafka_33 = "3.3.1"
        const val lz4 = "1.8.0"
        const val mavenArtifact = "3.8.4"
        const val metrics = "2.2.0"
        const val mockito = "5.1.0"
        const val netty = "4.1.78.Final"
        const val powermock = "2.0.9"
        const val reflections = "0.9.12"
        const val reload4j = "1.2.19"
        const val rocksDB = "7.1.2"
        const val scalaCollectionCompat = "2.6.0"
        // = When updating the scalafmt version please also update the version field in checkstyle/.scalafmt.conf. scalafmt now
        // = has the version field as mandatory in its configuration, see
        // = https://github.com/scalameta/scalafmt/releases/tag/v3.1.0.
        const val scalafmt = "3.5.9"
        const val scalaJava8Compat =  "1.0.2"
        const val scoverage = "1.4.11"
        const val slf4j = "1.7.36"
        const val snappy = "1.1.8.4"
        const val spotbugs = "4.7.3"
        const val swaggerAnnotations = "2.2.0"
        const val swaggerJaxrs2 = "2.2.0"
        const val zinc = "1.7.2"
        const val zookeeper = "3.6.3"
        const val zstd = "1.5.2-1"
    }

    object Libs {
        val activation = "javax.activation:activation:${Version.activation}"
        val apacheda = "org.apache.directory.api:api-all:${Version.apacheda}"
        val apachedsCoreApi = "org.apache.directory.server:apacheds-core-api:${Version.apacheds}"
        val apachedsInterceptorKerberos =
            "org.apache.directory.server:apacheds-interceptor-kerberos:${Version.apacheds}"
        val apachedsProtocolShared = "org.apache.directory.server:apacheds-protocol-shared:${Version.apacheds}"
        val apachedsProtocolKerberos = "org.apache.directory.server:apacheds-protocol-kerberos:${Version.apacheds}"
        val apachedsProtocolLdap = "org.apache.directory.server:apacheds-protocol-ldap:${Version.apacheds}"
        val apachedsLdifPartition = "org.apache.directory.server:apacheds-ldif-partition:${Version.apacheds}"
        val apachedsMavibotPartition = "org.apache.directory.server:apacheds-mavibot-partition:${Version.apacheds}"
        val apachedsJdbmPartition = "org.apache.directory.server:apacheds-jdbm-partition:${Version.apacheds}"
        val argparse4j = "net.sourceforge.argparse4j:argparse4j:${Version.argparse4j}"
        val bcpkix = "org.bouncycastle:bcpkix-jdk15on:${Version.bcpkix}"
        val commonsCli = "commons-cli:commons-cli:${Version.commonsCli}"
        val easymock = "org.easymock:easymock:${Version.easymock}"
        val jacksonAnnotations = "com.fasterxml.jackson.core:jackson-annotations:${Version.jackson}"
        val jacksonDatabind = "com.fasterxml.jackson.core:jackson-databind:${Version.jacksonDatabind}"
        val jacksonDataformatCsv = "com.fasterxml.jackson.dataformat:jackson-dataformat-csv:${Version.jackson}"
        val jacksonModuleScala =
            "com.fasterxml.jackson.module:jackson-module-scala_$Version.baseScala:${Version.jackson}"
        val jacksonJDK8Datatypes = "com.fasterxml.jackson.datatype:jackson-datatype-jdk8:${Version.jackson}"
        val jacksonJaxrsJsonProvider = "com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:${Version.jackson}"
        val jaxAnnotationApi = "javax.annotation:javax.annotation-api:${Version.jaxAnnotation}"
        val jaxbApi = "javax.xml.bind:jaxb-api:${Version.jaxb}"
        val jaxrsApi = "javax.ws.rs:javax.ws.rs-api:${Version.jaxrs}"
        val javassist = "org.javassist:javassist:${Version.javassist}"
        val jettyServer = "org.eclipse.jetty:jetty-server:${Version.jetty}"
        val jettyClient = "org.eclipse.jetty:jetty-client:${Version.jetty}"
        val jettyServlet = "org.eclipse.jetty:jetty-servlet:${Version.jetty}"
        val jettyServlets = "org.eclipse.jetty:jetty-servlets:${Version.jetty}"
        val jerseyContainerServlet = "org.glassfish.jersey.containers:jersey-container-servlet:${Version.jersey}"
        val jerseyHk2 = "org.glassfish.jersey.inject:jersey-hk2:${Version.jersey}"
        val jline = "org.jline:jline:${Version.jline}"
        val jmhCore = "org.openjdk.jmh:jmh-core:${Version.jmh}"
        val jmhCoreBenchmarks = "org.openjdk.jmh:jmh-core-benchmarks:${Version.jmh}"
        val jmhGeneratorAnnProcess = "org.openjdk.jmh:jmh-generator-annprocess:${Version.jmh}"
        val joptSimple = "net.sf.jopt-simple:jopt-simple:${Version.jopt}"
        val jose4j = "org.bitbucket.b_c:jose4j:${Version.jose4j}"
        val junitJupiter = "org.junit.jupiter:junit-jupiter:${Version.junit}"
        val junitJupiterApi = "org.junit.jupiter:junit-jupiter-api:${Version.junit}"
        val junitVintageEngine = "org.junit.vintage:junit-vintage-engine:${Version.junit}"
        val jqwik = "net.jqwik:jqwik:${Version.jqwik}"
        val hamcrest = "org.hamcrest:hamcrest:${Version.hamcrest}"
        val kafkaStreams_0100 = "org.apache.kafka:kafka-streams:${Version.kafka_0100}"
        val kafkaStreams_0101 = "org.apache.kafka:kafka-streams:${Version.kafka_0101}"
        val kafkaStreams_0102 = "org.apache.kafka:kafka-streams:${Version.kafka_0102}"
        val kafkaStreams_0110 = "org.apache.kafka:kafka-streams:${Version.kafka_0110}"
        val kafkaStreams_10 = "org.apache.kafka:kafka-streams:${Version.kafka_10}"
        val kafkaStreams_11 = "org.apache.kafka:kafka-streams:${Version.kafka_11}"
        val kafkaStreams_20 = "org.apache.kafka:kafka-streams:${Version.kafka_20}"
        val kafkaStreams_21 = "org.apache.kafka:kafka-streams:${Version.kafka_21}"
        val kafkaStreams_22 = "org.apache.kafka:kafka-streams:${Version.kafka_22}"
        val kafkaStreams_23 = "org.apache.kafka:kafka-streams:${Version.kafka_23}"
        val kafkaStreams_24 = "org.apache.kafka:kafka-streams:${Version.kafka_24}"
        val kafkaStreams_25 = "org.apache.kafka:kafka-streams:${Version.kafka_25}"
        val kafkaStreams_26 = "org.apache.kafka:kafka-streams:${Version.kafka_26}"
        val kafkaStreams_27 = "org.apache.kafka:kafka-streams:${Version.kafka_27}"
        val kafkaStreams_28 = "org.apache.kafka:kafka-streams:${Version.kafka_28}"
        val kafkaStreams_30 = "org.apache.kafka:kafka-streams:${Version.kafka_30}"
        val kafkaStreams_31 = "org.apache.kafka:kafka-streams:${Version.kafka_31}"
        val kafkaStreams_32 = "org.apache.kafka:kafka-streams:${Version.kafka_32}"
        val kafkaStreams_33 = "org.apache.kafka:kafka-streams:${Version.kafka_33}"
        val log4j = "ch.qos.reload4j:reload4j:${Version.reload4j}"
        val lz4 = "org.lz4:lz4-java:${Version.lz4}"
        val metrics = "com.yammer.metrics:metrics-core:${Version.metrics}"
        val dropwizardMetrics = "io.dropwizard.metrics:metrics-core:${Version.dropwizardMetrics}"
        val mockitoCore = "org.mockito:mockito-core:${Version.mockito}"
        val mockitoInline = "org.mockito:mockito-inline:${Version.mockito}"
        val mockitoKotlin = "org.mockito.kotlin:mockito-kotlin:${Version.mockito}"
        val mockitoJunitJupiter = "org.mockito:mockito-junit-jupiter:${Version.mockito}"
        val nettyHandler = "io.netty:netty-handler:${Version.netty}"
        val nettyTransportNativeEpoll = "io.netty:netty-transport-native-epoll:${Version.netty}"
        val powermockJunit4 = "org.powermock:powermock-module-junit4:${Version.powermock}"
        val powermockEasymock = "org.powermock:powermock-api-easymock:${Version.powermock}"
        val reflections = "org.reflections:reflections:${Version.reflections}"
        val rocksDBJni = "org.rocksdb:rocksdbjni:${Version.rocksDB}"
        val scalaCollectionCompat =
            "org.scala-lang.modules:scala-collection-compat_$Version.baseScala:${Version.scalaCollectionCompat}"
        val scalaJava8Compat =
            "org.scala-lang.modules:scala-java8-compat_$Version.baseScala:${Version.scalaJava8Compat}"
        val scalaLibrary = "org.scala-lang:scala-library:${Version.scala}"
        val scalaLogging = "com.typesafe.scala-logging:scala-logging_$Version.baseScala:${Version.scalaLogging}"
        val scalaReflect = "org.scala-lang:scala-reflect:${Version.scala}"
        val slf4jApi = "org.slf4j:slf4j-api:${Version.slf4j}"
        val slf4jlog4j = "org.slf4j:slf4j-log4j12:${Version.slf4j}"
        val snappy = "org.xerial.snappy:snappy-java:${Version.snappy}"
        val swaggerAnnotations = "io.swagger.core.v3:swagger-annotations:${Version.swaggerAnnotations}"
        val swaggerJaxrs2 = "io.swagger.core.v3:swagger-jaxrs2:${Version.swaggerJaxrs2}"
        val zookeeper = "org.apache.zookeeper:zookeeper:${Version.zookeeper}"
        val jfreechart = "jfreechart:jfreechart:${Version.jfreechart}"
        val mavenArtifact = "org.apache.maven:maven-artifact:${Version.mavenArtifact}"
        val zstd = "com.github.luben:zstd-jni:${Version.zstd}"
        val httpclient = "org.apache.httpcomponents:httpclient:${Version.httpclient}"
    }
}
